name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Kodni olish (Checkout)
        uses: actions/checkout@v4

      - name: .env faylni yaratish
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "ACCESS_SECRET_KEY=${{ secrets.ACCESS_SECRET_KEY }}" >> .env
          echo "ACCESS_EXPIRING_TIME=${{ secrets.ACCESS_EXPIRING_TIME }}" >> .env
          echo "REFRESH_SECRET_KEY=${{ secrets.REFRESH_SECRET_KEY }}" >> .env
          echo "REFRESH_EXPIRING_TIME=${{ secrets.REFRESH_EXPIRING_TIME }}" >> .env
          echo "VERIFIER_EMAIL=${{ secrets.VERIFIER_EMAIL }}" >> .env
          echo "VERIFIER_GOOGLE_PASS_KEY=${{ secrets.VERIFIER_GOOGLE_PASS_KEY }}" >> .env
          echo "REDIS_PASS=${{ secrets.REDIS_PASS }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_SOCKET_PORT=${{ secrets.REDIS_SOCKET_PORT }}" >> .env
          echo "REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" >> .env
          echo "MY_USERNAME=${{ secrets.MY_USERNAME }}" >> .env
          echo "MY_PASSWORD=${{ secrets.MY_PASSWORD }}" >> .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env

      - name: QEMU o‘rnatish
        uses: docker/setup-qemu-action@v3

      - name: Docker Buildx o‘rnatish
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub’ga login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker image build va push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/my-app:latest

      - name: Eskisini to‘xtatish (agar mavjud bo‘lsa)
        run: |
          docker stop my-app || true
          docker rm my-app || true

      - name: Yangi image’ni DockerHub’dan olish
        run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/my-app:latest

      - name: Yangi konteynerni ishga tushirish
        run: docker run -d --name my-app --env-file .env -p 3000:3000 ${{ vars.DOCKERHUB_USERNAME }}/my-app:latest
